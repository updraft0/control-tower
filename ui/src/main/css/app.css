/* FIXME no way to import normalize. Eh whatever */

@import 'colors.css';
@import 'fonts.css';
@import 'icon.css';

/* controls */
@import 'components/option-dropdown.css';

/* pages */
@import 'views/landing-page.css';

/* dialogs */
@import 'views/edit-map.css';

/* map views */
@import 'views/nav-top-view.css';
@import 'views/map-system-signature-view.css';

/* ok? */

*,
*::before,
*::after {
    box-sizing: border-box;
}

:root {
    font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
    line-height: 1.5;
    font-weight: 400;

    color-scheme: light dark;
    color: $gray-lighter;
    background-color: $bg-color;
    border: none;

    font-synthesis: none;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-size-adjust: 100%;

    scrollbar-color: $teal-dark $gray-dark;
}


button {
    padding: 2px;
    color: $gray-lightest;
}

table {
    border-collapse: collapse;
}

input, textarea, select, button {
    color: $gray-lightest;
    background-color: $gray-darker;
}

span, div, i, p, h1, h2, h3, label {
    color: $gray-lightest;
    user-select: none;
}

/* dialogs TODO move elsewhere */


h2.dialog-header {
    font-size: 1.2em;
    margin: 0;
    text-align: center;
}

/* character */


/* map modal */

dialog {
    padding: 0;
    border: 1px solid #888; /* fixme */
    background-color: $gray-darker;
    width: 80%;
    overflow: auto;
}

dialog::backdrop {
    opacity: 0.75;
    background-color: black;
    padding: 0;
    margin: 0;
}

.modal-content {
    padding: 3px;
    margin: 0;
}

.close {
    color: $red;
    float: right;
    font-size: 2em;
    font-weight: bold;
}

.close:hover,
.close:focus {
    color: $orange-light;
    text-decoration: none;
    cursor: pointer;
}

/* map page */
#map-view-inner {
    display: flex;
    flex-flow: row wrap;
}

#map-view-inner > * {
    flex: 1 100%;
}

@media all {
    #map-parent { min-width: 600px; flex: 4 1 auto; order: 3; }
    #map-left-sidebar { width: 28em; min-width: 380px; flex: 0 1 auto; order: 2; }
    #map-menu { flex: 1 100%; order: 1; }
}


/* map grid */
$box-width:     140px;
$box-height:    40px;

#map-menu {

}

#map-left-sidebar {
    margin-left: 3px;
    margin-right: 3px;
}

#map-parent {
    /*flex: unset; !* TODO not sure ? *!*/
    /*width: 70%;*/
    /*width: 500px;*/
    min-height: 60vh;
    height: 60vh;
    /*height: 500px;*/
    overflow: auto;
    box-sizing: content-box;
    /* material design corners - TODO need to templatise this */
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    border: 1px solid $gray-darker;
    border-radius: 5px;

    background-color: $gray-darker;

    margin-left: 2px;

    anchor-name: --map-parent;
}

/* TODO removed as wasn't sure this is needed!? */
#map-inner {
    position: relative;
    transform-origin: top left;
    box-sizing: content-box;
    height: 100%;
    width: 100%;
    z-index: 1;

    /* TODO: read about transform-origin */
    /*transform: scale(50%);*/
    /*transform-origin: 0 0 0;*/

    & svg {
        z-index: -1;
    }
}

/* TODO - combine the css here */
.system-error {
    width: $box-width;
    height: $box-height;
    position: absolute;
    user-select: none;
}

.system {
    user-select: none;
    width: $box-width;
    height: $box-height;
    position: absolute;
    box-sizing: border-box; /* important otherwise we need to do math for the border calculation*/
    box-snap: block-start;
}

.draggable-box {
    cursor: move;
}

.pinned-box {
    cursor: pointer;
    /*cursor: not-allowed; !* TODO not sure whether this is good *!*/
}

.system {
    font-family: Oxygen, Arial, sans-serif;
    font-weight: 700;
    font-size: 12px;
    background-color: $gray-dark;
    border-radius: 5px;
    /*transition: .5s linear;*/
}

.system:hover:not(.system-selected) {
    /*background-color: turquoise;*/
    box-shadow: 0px 9px 30px rgba($orange, 0.1);
    /*box-shadow: 0px 0px 100px 0px rgba(255,165,0,1);*/
    /*transition: .5s linear;*/
}

.system-selected {
    /* TODO adjust color effect */
    box-shadow: 0px 0px 5px 0px rgba($orange,0.7) inset;
    /*box-shadow: 2px 2px 2px 2px rgba($teal, .45), 1px 1px 1px 1px rgba($teal, .45);*/
    /*box-shadow: 0px 1px 4px rgba(0, 0, 0, 0.16), 0px 0px 0px 3px rgba(51, 51, 51,1);*/
}

mark.system-class, mark.system-online-chars {
    background: inherit;
    margin-left: 2px;
    margin-right: 2px;
    width: 1.3em;
    text-align: center;
}

.system-class-h {
    color: $green;
}

.system-class-c1, .system-class-c2, .system-class-shatteredfrig {
    color: $blue;
}

.system-class-l, .system-class-c3, .system-class-c4 {
    color: $orange;
}

.system-class-ns, .system-class-c5, .system-class-c6 {
    color: $red;
}

.system-class-pochven {
    color: $red-dark;
}

.system-class-thera {
    color: $yellow;
}

.system-class-sentineldrifter, .system-class-barbicandrifter, .system-class-videttedrifter, .system-class-confluxdrifter, .system-class-videttedrifter  {
    color: $teal;
}

/* TODO more system classes */
mark.system-online-chars {
    color: $green-dark;
}

span.wormhole-connection-option {
    margin: 1px 0 1px 0;
}

td.signature-type {
    /* FIXME why a div and lowercase ... */
    & div[data-wormhole-type="unknown"] {
        color: $red;
        text-decoration: $red-dark dotted underline;
    }
}

td.signature-target {
    & span[data-connection-type="Unknown"] {
        color: $red;
        text-decoration: $red-dark dotted underline;
    }

    & span.wormhole-eol {
        /* FIXME duplication */
        border-top: 2px solid $pink-dark;
        border-bottom: 2px solid $pink-dark;
    }
}

span.connection-system-name {
    padding-left: 2px;
    padding-right: 2px;
}

span:not(.wormhole-eol) > span.connection-system-name {
    border-top: 2px $gray-light solid;
    border-bottom: 2px $gray-light solid;
}

mark.system-effect {
    background: inherit;

}

.system-status-line mark {
    margin-right: 1px;
    background: inherit;
}

.system-status-line mark.system-effect {
    margin-top: 2px;
}


mark.system-pin-status {
    margin-top: 2px;
    color: $gray-lighter;
}

mark.system-scan-status {
    margin-top: 2px;

    &[data-scan-status="Unscanned"] {
        color: $red-dark;
    }

    &[data-scan-status="FullyScanned"] {
        color: $green-dark;
    }

    &[data-scan-status="FullyScannedStale"], &[data-scan-status="PartiallyScanned"] {
        color: $orange-dark;
    }
}

mark.system-shattered {
    margin-top: 2px;
    color: $blue;
}

.system-effect-magnetar {
    color: $wh-color-magnetar;
}

.system-effect-blackhole {
    color: $wh-color-blackhole;
}

.system-effect-redgiant {
    color: $wh-color-redgiant;
}

.system-effect-pulsar {
    color: $wh-color-pulsar;
}

.system-effect-cataclysmic {
    color: $wh-color-cataclysmic;
}

.system-effect-wolfrayet {
    color: $wh-color-wolfrayet;
}

/* Connectors */
svg circle.connector-end {
    fill: $gray;
    stroke: $gray-light;
    stroke-width: 2px;
}

svg path.connector-path {
    fill: none;
    stroke: $gray;
    stroke-width: 4px;
    fill-opacity: 0.8;
}

svg g.wormhole-connection {
    pointer-events: bounding-box;

    &:hover {
        z-index: 95;
        filter: drop-shadow(-3px 3px 4px rgba(0,0,0, 0.3));

        & path:first-child {
            stroke: $gray-lightest;
        }
    }

    &.selected {
        /* $orange :mind_blown: see https://codepen.io/sosuke/pen/Pjoqqp */
        filter: drop-shadow(0px 0px 3px #ffb);
        /*filter: invert(62%) sepia(79%) saturate(2838%) hue-rotate(3deg) brightness(96%) contrast(90%);*/
    }
}

svg path.connector-path-outline {
    pointer-events: visibleStroke;
    fill: none;
    stroke: $gray-light;
    stroke-width: 8px;
}

mark.system-name {
    background: inherit;
    color: $gray-lighter;
    margin-left: 2px;
    margin-right: auto;
}

mark.system-map-name {
    background: inherit;
    color: $gray-lightest;
    margin-left: 2px;
    margin-right: auto;
    overflow: hidden;
    white-space: nowrap;
}

mark.system-wormhole-static {
    background: inherit;
    margin-left: 2px;
    margin-right: 2px;
}

/* FIXME colors wrong here */
.system-stance-hostile {
    border: 2px solid $red;
}

.system-stance-friendly {
    border: 2px solid $blue;
}

.system-stance-unknown {
    border: 2px solid $gray-light;
}

.system-occupied {
    border: 2px solid $orange;
}

.system-status-line {
    display: flex;
    min-width: 100%;
}

.system-status-line > :last-child {
    margin-right: 2px;
}

/* solar system info */
.left-sidebar-view {
    background-color: $gray-darker;
    border-radius: 4px;
    border: 1px $gray-dark solid;
    /* material design shadow ooh */
    box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);
    /*width: 100%;*/
    padding: 5px;
    margin-bottom: 10px;
    margin-right: 6px;
}

.left-sidebar-view table {
    width: 100%;
}

tr.solar-system-name {
    display: flex;
    flex-flow: row;
}

tr.solar-system-name > * {
    flex: 1 100%;
}

tr.solar-system-name > span {
    margin-right: auto;
    color: $gray-lighter;
    font-weight: bold;
}

span.solar-system-name-default {
    color: $gray-light;
}


tr.solar-system-name > a:first-of-type {
    margin-left: auto;
    flex: 0;
}

tr.solar-system-name > a:last-of-type {
    margin-right: 0;
}

tr.solar-system-name > a {
    margin-right: 2px;
    margin-left: 2px;
    flex: 0;
}

tr.solar-system-location {
    user-select: none;
    color: $gray-lighter;
}

tr.solar-system-properties {
    display: flex;
}

tr.solar-system-properties > mark {
    background-color: $gray-darkest;
    border-radius: 5px;
    margin-left: 2px;
    margin-right: 2px;
    padding-left: 4px;
    padding-right: 4px;
    user-select: none;
    font-size: 0.9em;
}

tr.solar-system-properties mark:first-of-type {
    margin-left: 0;
}

tr.solar-system-properties mark.system-planets {
    margin-right: auto;
}

tr.solar-system-properties mark.system-class {
    width: fit-content;
}

mark.system-planets {
    color: $gray-lighter;
}

img.type-icon-16-round {
    height: 0.9em; /* FIXME this is not 16px ofc */
    width: 0.9em;
    border-radius: 10px 3px 3px 3px;
}

dialog.system-rename-dialog {
    width: 15em;
    user-select: none;

    & div.dialog-header {
        & h2 {
            font-size: 1.2em;
            margin: 0;
        }
        text-align: center;
        color: $gray-lightest;
    }

    & input {
        width: 100%;
    }
}

input.input-system-name {
    /*width: 100%;*/
}

/* grid pattern */
.grid {
    box-sizing: border-box;
    border: none;
    background:
            linear-gradient(0deg, $gray 1px, rgba(0, 0, 0, 0) 1px),
            linear-gradient(90deg, $gray 1px, rgba(0, 0, 0, 0) 1px),
            linear-gradient(0deg, rgba(0, 0, 0, 0.05) 1px, rgba(0, 0, 0, 0) 1px),
            linear-gradient(90deg, rgba(0, 0, 0, 0.05) 1px, rgba(0, 0, 0, 0) 1px)

}

.g-20px {
    background-size: 20px 20px;
}

/* map toolbar */

#map-toolbar {
    /* material design corners - TODO need to templatise this */
    /*box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);*/
    /*border: 1px solid $gray-darker;*/
    border-radius: 5px;
    /*font-size: 1.4em;*/
    /*background-color: $gray-darkest;*/
    /*padding: 5px;*/
    /*margin-left: 0;*/
    /*margin-bottom: 5px;*/
    /* TODO not sure about the look of this */
    box-shadow: 20px 0 10px -20px rgba(0,0,0,0.45) inset;
    /*float: left;*/
    margin-left: 15px;
    margin-top: 20px;
    z-index: 10;
    display: flex;
    flex-direction: column;
    width: 1.6em;
    /* float + relative position to receive mouse events */
    /*float: left;*/
    position: absolute;

    left: anchor(--map-parent left);

    opacity: 85%;

    & button {
        padding: 2px;
        border-left: 1px solid $gray-dark;
        border-right: 1px solid $gray-dark;
        border-top: 1px solid $gray;
        border-bottom: 1px solid $gray;
        border-radius: 0px 0px 0px 0px;
        background-color: $gray;
        font-size: 1.3em;
        transition: background-color 0.3s;
        box-shadow: 0 1px 4px rgba(0, 0, 0, .6); /* TODO this looks a bit weird */
        color: $indigo-light;
    }

    & button:first-of-type {
        border-top: 1px solid $gray-dark;
        border-radius: 3px 3px 0 0;
    }

    & button:last-of-type {
        border-bottom: 1px solid $gray-dark;
        border-radius: 0 0 3px 3px;
    }

    & button:hover:not(:disabled) {
        background-color: $gray-dark;
        border: 1px solid $indigo-dark;
        color: $orange-dark;
    }

    & button:disabled {
        color: $gray-light;
    }

    & button#stance-friendly:not(:disabled) {
        color: $blue;
    }

    & button#stance-hostile:not(:disabled),
    & button#remove-connection:not(:disabled),
    & button#remove-system:not(:disabled) {
        color: $red;
    }
}

/* new system dialog */

dialog.system-add-dialog {
    width: 300px;
    padding: 2px;
}

.system-add-view div.table {
    font-size: 0.8em;
}

div.table {
    display: table;
    border-spacing: 5px 2px;
    width: 100%;
}

div.table div.row {
    display: table-row;
}

div.table div.row * {
    display: table-cell;
}

div.table div.row input {
    margin: 0;
    padding: 0;
}

div.table div.row input[type=text] {
    width: 100%;
}

div.table div.row label {
    width: 60px;
    text-align: right;
}

div.submit {
    padding-top: 5px;
    padding-bottom: 5px;
}

div.submit mark.form-error {
    display: inline-block;
    background: inherit;
    color: $red;
    min-width: 50%;
}

div.dialog-view {
    margin: 5px;
}


input:focus-visible {
    outline: 1px solid $orange;
}

/* FIXME fixed pixel widths :/ */

dialog.system-remove-dialog {
    width: fit-content;
}

dialog.confirm-dialog {
    width: fit-content;
}

dialog {
    border-radius: 5px;

    & button {
        border: 0;
        border-radius: 2px;
        box-shadow: 0 1px 4px rgba(0, 0, 0, .6);
        transition: background-color 0.3s;
        font-weight: bold;
        margin: 2px;

        &:first-of-type {
            margin-left: 0;
        }

        &:last-of-type {
            margin-right: 0;
        }
    }

    & button.add-button, button.ok-button, button.cancel-good-button {
        background-color: $green-dark;
    }

    & button.add-button:hover, button.ok-button:hover, button.cancel-good-button:hover {
        filter: brightness(130%);
    }

    & button.add-button:focus-visible, button.ok-button:focus-visible, button.cancel-good-button:focus-visible {
        outline: 1px solid $orange;
    }

    & button.cancel-button, button.ok-bad-button {
        background-color: $red-dark;
    }

    & button.cancel-button:hover, button.ok-bad-button:hover {
        filter: brightness(130%);
    }

    & button.cancel-button:focus-visible, button.ok-bad-button:focus-visible {
        outline: 1px solid $orange;
    }

}