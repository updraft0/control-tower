# control-tower configuration, HOCON format (see https://github.com/lightbend/config/blob/main/HOCON.md)

control-tower {
  auth {
    # secret used for authenticating session cookies
    # base64-encoded 32 byte value (expected chars length 44)
    secret: ${CT_AUTH_SECRET}

    # secret used to protect the session id when called back by ESI (and only for that)
    # base64-encoded 32 byte value (expected chars length 44)
    esi-callback-secret: ${CT_ESI_CALLBACK_SECRET}

    # secret used for encrypting tokens in database
    # base64-encoded 32 byte value (expected chars length 44)
    encryption-secret: ${CT_ENCRYPTION_SECRET}

    # ESI application details
    esi {
      host: "login.eveonline.com"
      host: ${?CT_ESI_HOST}

      scopes: [
        "publicData",
        "esi-characters.read_corporation_roles.v1",
        "esi-corporations.read_corporation_membership.v1",
        "esi-corporations.read_starbases.v1",
        "esi-corporations.read_structures.v1",
        "esi-fleets.read_fleet.v1",
        "esi-location.read_online.v1",
        "esi-location.read_location.v1",
        "esi-location.read_ship_type.v1",
        "esi-ui.write_waypoint.v1",
        "esi-universe.read_structures.v1",
      ]

      client-id: ${CT_ESI_CLIENT_ID}
      client-secret: ${CT_ESI_CLIENT_SECRET}

      # keys for signature verification
      keys {
        # taken from https://login.eveonline.com/oauth/jwks
        rs256 {
          e: "AQAB"
          n: "nehPQ7FQ1YK-leKyIg-aACZaT-DbTL5V1XpXghtLX_bEC-fwxhdE_4yQKDF6cA-V4c-5kh8wMZbfYw5xxgM9DynhMkVrmQFyYB3QMZwydr922UWs3kLz-nO6vi0ldCn-ffM9odUPRHv9UbhM5bB4SZtCrpr9hWQgJ3FjzWO2KosGQ8acLxLtDQfU_lq0OGzoj_oWwUKaN_OVfu80zGTH7mxVeGMJqWXABKd52ByvYZn3wL_hG60DfDWGV_xfLlHMt_WoKZmrXT4V3BCBmbitJ6lda3oNdNeHUh486iqaL43bMR2K4TzrspGMRUYXcudUQ9TycBQBrUlT85NRY9TeOw"
        }
      }
    }

    # duration of session + cookie
    session-expiry: 90.days
  }

  # directory where map.db, sde.db etc. will be stored
  db: ${CT_DB_PATH}

  esi {
    # base url for the ESI
    base: "https://esi.evetech.net"
    base: ${?CT_ESI_BASE}
  }

  sde {
    # base url for the SDE
    base: "https://eve-static-data-export.s3-eu-west-1.amazonaws.com"
    base: ${?CT_SDE_BASE}

    # number of fibers to use when parsing SDE zip data
    parallel: 4
    parallel: ${?SDE_PARALLEL}
  }

  http {
    protocol: "http"
    protocol: ${?CT_HTTP_PROTO}

    # listen hostname (for socket binding)
    listen-host: "0.0.0.0"
    listen-host: ${?CT_HTTP_LISTEN_HOST}

    # hostname (will be used with the ESI callback and for UI configuration as well)
    host: "localhost"
    host: ${?CT_HTTP_HOST}

    port: 8092
    port: ${?CT_HTTP_PORT}

    # mostly useful override for local development
    ui-port: ${control-tower.http.port}
    ui-port: ${?CT_HTTP_UI_PORT}
  }

  # TODO: add user map auth permissions check interval

  # Character location tracking
  location {
    interval: "5.seconds"
    parallel: 16
  }

}

# Prod logging is done in json
logger {
  type: "json"
  format: "%label{timestamp}{%timestamp{yyyy-MM-dd'T'HH:mm:ss.nnnnnnnnnZ}} %label{level}{%level} %label{fiberId}{%fiberId} %label{message}{%message} %label{cause}{%cause} %label{name}{%name} %kvs"

  filter {
    rootLevel: DEBUG
    rootLevel: ${?ROOT_LOG_LEVEL}

    // this should mirror application.dev.conf for ease of override
    mappings {
      // ESI client
      "org.updraft0.esi.client": INFO

      // dependencies
      "io.netty": INFO
      "org.flywaydb": INFO
      "io.getquill.context.jdbc": INFO // set to debug to log queries
      "sttp.tapir.server.ziohttp": DEBUG // set to debug to log server response times
    }
  }
}
